{"version":3,"file":"static/js/reactPlayerSoundCloud.b4a85c5b.chunk.js","mappings":"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","sources":["../node_modules/react-player/lib/players/SoundCloud.js"],"sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar SoundCloud_exports = {};\n__export(SoundCloud_exports, {\n  default: () => SoundCloud\n});\nmodule.exports = __toCommonJS(SoundCloud_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://w.soundcloud.com/player/api.js\";\nconst SDK_GLOBAL = \"SC\";\nclass SoundCloud extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"duration\", null);\n    __publicField(this, \"currentTime\", null);\n    __publicField(this, \"fractionLoaded\", null);\n    __publicField(this, \"mute\", () => {\n      this.setVolume(0);\n    });\n    __publicField(this, \"unmute\", () => {\n      if (this.props.volume !== null) {\n        this.setVolume(this.props.volume);\n      }\n    });\n    __publicField(this, \"ref\", (iframe) => {\n      this.iframe = iframe;\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url, isReady) {\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((SC) => {\n      if (!this.iframe)\n        return;\n      const { PLAY, PLAY_PROGRESS, PAUSE, FINISH, ERROR } = SC.Widget.Events;\n      if (!isReady) {\n        this.player = SC.Widget(this.iframe);\n        this.player.bind(PLAY, this.props.onPlay);\n        this.player.bind(PAUSE, () => {\n          const remaining = this.duration - this.currentTime;\n          if (remaining < 0.05) {\n            return;\n          }\n          this.props.onPause();\n        });\n        this.player.bind(PLAY_PROGRESS, (e) => {\n          this.currentTime = e.currentPosition / 1e3;\n          this.fractionLoaded = e.loadedProgress;\n        });\n        this.player.bind(FINISH, () => this.props.onEnded());\n        this.player.bind(ERROR, (e) => this.props.onError(e));\n      }\n      this.player.load(url, {\n        ...this.props.config.options,\n        callback: () => {\n          this.player.getDuration((duration) => {\n            this.duration = duration / 1e3;\n            this.props.onReady();\n          });\n        }\n      });\n    });\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {\n  }\n  seekTo(seconds, keepPlaying = true) {\n    this.callPlayer(\"seekTo\", seconds * 1e3);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction * 100);\n  }\n  getDuration() {\n    return this.duration;\n  }\n  getCurrentTime() {\n    return this.currentTime;\n  }\n  getSecondsLoaded() {\n    return this.fractionLoaded * this.duration;\n  }\n  render() {\n    const { display } = this.props;\n    const style = {\n      width: \"100%\",\n      height: \"100%\",\n      display\n    };\n    return /* @__PURE__ */ import_react.default.createElement(\n      \"iframe\",\n      {\n        ref: this.ref,\n        src: `https://w.soundcloud.com/player/?url=${encodeURIComponent(this.props.url)}`,\n        style,\n        frameBorder: 0,\n        allow: \"autoplay\"\n      }\n    );\n  }\n}\n__publicField(SoundCloud, \"displayName\", \"SoundCloud\");\n__publicField(SoundCloud, \"canPlay\", import_patterns.canPlay.soundcloud);\n__publicField(SoundCloud, \"loopOnEnded\", true);\n"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","_step","_iterator","_createForOfIteratorHelper","_loop","key","value","call","get","enumerable","s","n","done","err","e","f","__publicField","obj","configurable","writable","__defNormalProp","SoundCloud_exports","target","all","name","__export","default","SoundCloud","module","exports","import_react","isNodeMode","__esModule","__toESM","require","import_utils","import_patterns","_import_react$Compone","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_assertThisInitialized","callPlayer","setVolume","props","volume","iframe","_createClass","this","onMount","url","isReady","_this2","getSDK","then","SC","_SC$Widget$Events","Widget","Events","PLAY","PLAY_PROGRESS","PAUSE","FINISH","ERROR","player","bind","onPlay","duration","currentTime","onPause","currentPosition","fractionLoaded","loadedProgress","onEnded","onError","load","_objectSpread","config","options","callback","getDuration","onReady","seconds","keepPlaying","length","undefined","pause","fraction","style","width","height","display","createElement","ref","src","concat","encodeURIComponent","frameBorder","allow","Component","canPlay","soundcloud"],"sourceRoot":""}