{"version":3,"file":"static/js/reactPlayerTwitch.a7752d3c.chunk.js","mappings":"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","sources":["../node_modules/react-player/lib/players/Twitch.js"],"sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Twitch_exports = {};\n__export(Twitch_exports, {\n  default: () => Twitch\n});\nmodule.exports = __toCommonJS(Twitch_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://player.twitch.tv/js/embed/v1.js\";\nconst SDK_GLOBAL = \"Twitch\";\nconst PLAYER_ID_PREFIX = \"twitch-player-\";\nclass Twitch extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"playerID\", this.props.config.playerId || `${PLAYER_ID_PREFIX}${(0, import_utils.randomString)()}`);\n    __publicField(this, \"mute\", () => {\n      this.callPlayer(\"setMuted\", true);\n    });\n    __publicField(this, \"unmute\", () => {\n      this.callPlayer(\"setMuted\", false);\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url, isReady) {\n    const { playsinline, onError, config, controls } = this.props;\n    const isChannel = import_patterns.MATCH_URL_TWITCH_CHANNEL.test(url);\n    const id = isChannel ? url.match(import_patterns.MATCH_URL_TWITCH_CHANNEL)[1] : url.match(import_patterns.MATCH_URL_TWITCH_VIDEO)[1];\n    if (isReady) {\n      if (isChannel) {\n        this.player.setChannel(id);\n      } else {\n        this.player.setVideo(\"v\" + id);\n      }\n      return;\n    }\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((Twitch2) => {\n      this.player = new Twitch2.Player(this.playerID, {\n        video: isChannel ? \"\" : id,\n        channel: isChannel ? id : \"\",\n        height: \"100%\",\n        width: \"100%\",\n        playsinline,\n        autoplay: this.props.playing,\n        muted: this.props.muted,\n        // https://github.com/CookPete/react-player/issues/733#issuecomment-549085859\n        controls: isChannel ? true : controls,\n        time: (0, import_utils.parseStartTime)(url),\n        ...config.options\n      });\n      const { READY, PLAYING, PAUSE, ENDED, ONLINE, OFFLINE, SEEK } = Twitch2.Player;\n      this.player.addEventListener(READY, this.props.onReady);\n      this.player.addEventListener(PLAYING, this.props.onPlay);\n      this.player.addEventListener(PAUSE, this.props.onPause);\n      this.player.addEventListener(ENDED, this.props.onEnded);\n      this.player.addEventListener(SEEK, this.props.onSeek);\n      this.player.addEventListener(ONLINE, this.props.onLoaded);\n      this.player.addEventListener(OFFLINE, this.props.onLoaded);\n    }, onError);\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {\n    this.callPlayer(\"pause\");\n  }\n  seekTo(seconds, keepPlaying = true) {\n    this.callPlayer(\"seek\", seconds);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction);\n  }\n  getDuration() {\n    return this.callPlayer(\"getDuration\");\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"getCurrentTime\");\n  }\n  getSecondsLoaded() {\n    return null;\n  }\n  render() {\n    const style = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { style, id: this.playerID });\n  }\n}\n__publicField(Twitch, \"displayName\", \"Twitch\");\n__publicField(Twitch, \"canPlay\", import_patterns.canPlay.twitch);\n__publicField(Twitch, \"loopOnEnded\", true);\n"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","_step","_iterator","_createForOfIteratorHelper","_loop","key","value","call","get","enumerable","s","n","done","err","e","f","__publicField","obj","configurable","writable","__defNormalProp","Twitch_exports","target","all","name","__export","default","Twitch","module","exports","import_react","isNodeMode","__esModule","__toESM","require","import_utils","import_patterns","_import_react$Compone","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_assertThisInitialized","callPlayer","props","config","playerId","concat","randomString","_createClass","this","onMount","url","isReady","_this2","_this$props","playsinline","onError","controls","isChannel","MATCH_URL_TWITCH_CHANNEL","test","id","match","MATCH_URL_TWITCH_VIDEO","player","setChannel","setVideo","getSDK","then","Twitch2","Player","playerID","_objectSpread","video","channel","height","width","autoplay","playing","muted","time","parseStartTime","options","_Twitch2$Player","READY","PLAYING","PAUSE","ENDED","ONLINE","OFFLINE","SEEK","addEventListener","onReady","onPlay","onPause","onEnded","onSeek","onLoaded","seconds","keepPlaying","length","undefined","pause","fraction","createElement","style","Component","canPlay","twitch"],"sourceRoot":""}